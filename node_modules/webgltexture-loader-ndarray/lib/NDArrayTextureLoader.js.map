{"version":3,"sources":["../src/NDArrayTextureLoader.js"],"names":["NDArrayTextureLoader","obj","shape","data","stride","input","gl","texture","createTexture","bindTexture","TEXTURE_2D","width","height","get","add"],"mappings":";;;;;;;;;;AACA;;AAKA;;;;;;;;;;;;IAEMA,oB;;;;;;;;;;;4BACIC,G,EAAU;AAChB,aAAOA,IAAIC,KAAJ,IAAaD,IAAIE,IAAjB,IAAyBF,IAAIG,MAApC;AACD;;;8BAESC,K,EAAgB;AACxB,aAAOA,KAAP;AACD;;;+BAEUA,K,EAAgB;AAAA,UACjBC,EADiB,GACV,IADU,CACjBA,EADiB;;AAEzB,UAAMC,UAAUD,GAAGE,aAAH,EAAhB;AACAF,SAAGG,WAAH,CAAeH,GAAGI,UAAlB,EAA8BH,OAA9B;;AAHyB,wCAIDF,MAAMH,KAJL;AAAA,UAIlBS,KAJkB;AAAA,UAIXC,MAJW;;AAKzB,wCAAmBN,EAAnB,EAAuBC,OAAvB,EAAgCF,KAAhC;AACA,aAAO,EAAEE,gBAAF,EAAWI,YAAX,EAAkBC,cAAlB,EAAP;AACD;;;2BAEMP,K,EAAgB;AACrB;AADqB,UAEbC,EAFa,GAEN,IAFM,CAEbA,EAFa;;AAAA,iBAGD,KAAKO,GAAL,CAASR,KAAT,CAHC;AAAA,UAGbE,OAHa,QAGbA,OAHa;;AAIrBD,SAAGG,WAAH,CAAeH,GAAGI,UAAlB,EAA8BH,OAA9B;AACA,wCAAmBD,EAAnB,EAAuBC,OAAvB,EAAgCF,KAAhC;AACD;;;;;;AAGH,mCAAeS,GAAf,CAAmBd,oBAAnB;;kBAEeA,oB","file":"NDArrayTextureLoader.js","sourcesContent":["//@flow\nimport {\n  WebGLTextureLoaderSyncHashCache,\n  globalRegistry\n} from \"webgltexture-loader\";\nimport type { NDArray } from \"ndarray\";\nimport drawNDArrayTexture from \"./drawNDArrayTexture\";\n\nclass NDArrayTextureLoader extends WebGLTextureLoaderSyncHashCache<NDArray> {\n  canLoad(obj: any) {\n    return obj.shape && obj.data && obj.stride;\n  }\n\n  inputHash(input: NDArray) {\n    return input;\n  }\n\n  getNoCache(input: NDArray) {\n    const { gl } = this;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const [width, height] = input.shape;\n    drawNDArrayTexture(gl, texture, input);\n    return { texture, width, height };\n  }\n\n  update(input: NDArray) {\n    // For now we assume the NDArray always change & need a redraw but we might try to only update if changes later\n    const { gl } = this;\n    const { texture } = this.get(input);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    drawNDArrayTexture(gl, texture, input);\n  }\n}\n\nglobalRegistry.add(NDArrayTextureLoader);\n\nexport default NDArrayTextureLoader;\n"]}